// <auto-generated />
using Langwish.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Langwish.Migrations
{
    [DbContext(typeof(LangwishDbContext))]
    partial class LangwishDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Langwish.Models.FileWatcher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileNameWithFullPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileNameWithoutExtension")
                        .HasColumnType("TEXT");

                    b.Property<long>("FolderWatcherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FolderWatcherId");

                    b.ToTable("FileWatchers");
                });

            modelBuilder.Entity("Langwish.Models.FolderWatcher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FolderName")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<long>("FoundEntriesCt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FoundEntriesUniqueCt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FoundModulesCt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectRootPath")
                        .HasMaxLength(800)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FolderWatchers");
                });

            modelBuilder.Entity("Langwish.Models.LangwishRun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FilesFoundCt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FoldersFoundCt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RunDuration")
                        .HasColumnType("TEXT");

                    b.Property<long>("TranslatesFoundCt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TranslatesFoundUniqueCt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LangwishRuns");
                });

            modelBuilder.Entity("Langwish.Models.LangwishWord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TranslateText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LangwishWords");
                });

            modelBuilder.Entity("Langwish.Models.LangwishWordInFile", b =>
                {
                    b.Property<long>("LangwishWordId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FileWatcherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LangwishWordId", "FileWatcherId");

                    b.HasIndex("FileWatcherId");

                    b.ToTable("LangwishWordInFiles");
                });

            modelBuilder.Entity("Langwish.Models.FileWatcher", b =>
                {
                    b.HasOne("Langwish.Models.FolderWatcher", "FolderWatcher")
                        .WithMany()
                        .HasForeignKey("FolderWatcherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FolderWatcher");
                });

            modelBuilder.Entity("Langwish.Models.LangwishWordInFile", b =>
                {
                    b.HasOne("Langwish.Models.FileWatcher", "FileWatcher")
                        .WithMany("LangwishWordInFiles")
                        .HasForeignKey("FileWatcherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Langwish.Models.LangwishWord", "LangwishWord")
                        .WithMany("LangwishWordsInFiles")
                        .HasForeignKey("LangwishWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileWatcher");

                    b.Navigation("LangwishWord");
                });

            modelBuilder.Entity("Langwish.Models.FileWatcher", b =>
                {
                    b.Navigation("LangwishWordInFiles");
                });

            modelBuilder.Entity("Langwish.Models.LangwishWord", b =>
                {
                    b.Navigation("LangwishWordsInFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
