// <auto-generated />
using System;
using Dpf.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DPF.Application.Data.Migrations
{
    [DbContext(typeof(DpfPrimaryDbContext))]
    partial class DpfPrimaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Dpf.Core.Entities.DpfDirectory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FileCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TotalSizeOnDisk")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("DpfDirectories");
                });

            modelBuilder.Entity("Dpf.Core.Entities.DpfFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<long?>("DpfDirectoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DpfDirectoryId");

                    b.ToTable("DpfFiles");
                });

            modelBuilder.Entity("Dpf.Core.Entities.DpfDirectory", b =>
                {
                    b.HasOne("Dpf.Core.Entities.DpfDirectory", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Dpf.Core.Entities.DpfFile", b =>
                {
                    b.HasOne("Dpf.Core.Entities.DpfDirectory", null)
                        .WithMany("DpfFiles")
                        .HasForeignKey("DpfDirectoryId");
                });

            modelBuilder.Entity("Dpf.Core.Entities.DpfDirectory", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("DpfFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
