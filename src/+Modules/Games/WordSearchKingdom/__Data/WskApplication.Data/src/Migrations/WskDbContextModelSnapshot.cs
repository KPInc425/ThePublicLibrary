// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WskInfrastructure.Data;

#nullable disable

namespace WskApplication.Data.Migrations
{
    [DbContext(typeof(WskDbContext))]
    partial class WskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("WskCore.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameDifficulty")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameGridId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameGridId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WskCore.Entities.GameCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameCategoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameCategoryId");

                    b.HasIndex("GameId");

                    b.ToTable("GameCategories");
                });

            modelBuilder.Entity("WskCore.Entities.GameGrid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameGrids");
                });

            modelBuilder.Entity("WskCore.Entities.GameTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameTagId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("GameTagId");

                    b.ToTable("GameTags");
                });

            modelBuilder.Entity("WskCore.Entities.HiddenWord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameGridId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameGridId");

                    b.ToTable("HiddenWords");
                });

            modelBuilder.Entity("WskCore.Entities.RowCell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameGridId")
                        .HasColumnType("TEXT");

                    b.Property<char>("Letter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pigment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameGridId");

                    b.ToTable("RowCells");
                });

            modelBuilder.Entity("WskCore.Entities.Game", b =>
                {
                    b.HasOne("WskCore.Entities.GameGrid", "GameGrid")
                        .WithMany()
                        .HasForeignKey("GameGridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameGrid");
                });

            modelBuilder.Entity("WskCore.Entities.GameCategory", b =>
                {
                    b.HasOne("WskCore.Entities.GameCategory", null)
                        .WithMany("GameCategories")
                        .HasForeignKey("GameCategoryId");

                    b.HasOne("WskCore.Entities.Game", null)
                        .WithMany("GameCategories")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("WskCore.Entities.GameTag", b =>
                {
                    b.HasOne("WskCore.Entities.Game", null)
                        .WithMany("GameTags")
                        .HasForeignKey("GameId");

                    b.HasOne("WskCore.Entities.GameTag", null)
                        .WithMany("GameTags")
                        .HasForeignKey("GameTagId");
                });

            modelBuilder.Entity("WskCore.Entities.HiddenWord", b =>
                {
                    b.HasOne("WskCore.Entities.GameGrid", null)
                        .WithMany("HiddenWords")
                        .HasForeignKey("GameGridId");
                });

            modelBuilder.Entity("WskCore.Entities.RowCell", b =>
                {
                    b.HasOne("WskCore.Entities.GameGrid", null)
                        .WithMany("RowCells")
                        .HasForeignKey("GameGridId");
                });

            modelBuilder.Entity("WskCore.Entities.Game", b =>
                {
                    b.Navigation("GameCategories");

                    b.Navigation("GameTags");
                });

            modelBuilder.Entity("WskCore.Entities.GameCategory", b =>
                {
                    b.Navigation("GameCategories");
                });

            modelBuilder.Entity("WskCore.Entities.GameGrid", b =>
                {
                    b.Navigation("HiddenWords");

                    b.Navigation("RowCells");
                });

            modelBuilder.Entity("WskCore.Entities.GameTag", b =>
                {
                    b.Navigation("GameTags");
                });
#pragma warning restore 612, 618
        }
    }
}
