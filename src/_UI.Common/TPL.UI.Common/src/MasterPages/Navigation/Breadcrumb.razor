@implements IDisposable

@inject IStringLocalizer<Breadcrumb> Localize

@foreach (var item in Items)
{
    @if (item.Text == "")
    {
        <a @onclick="()=>NavigateToUrl(item.Url)">Library &gt;</a>
    }
    else 
    {
        <a @onclick="()=>NavigateToUrl(item.Url)">@item.Text &gt;</a>
    }
}
@code {
    public IEnumerable<MenuItem> Items { get; set; } = new List<MenuItem>();
    protected override void OnInitialized()
    {
        var currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        Items = currentUrl.Split(Path.PathSeparator).ToList().Select(rs => new MenuItem { Text = rs });
        NavigationManager.LocationChanged += LocationHasChanged;
    }
    private void LocationHasChanged(object sender, LocationChangedEventArgs e)
    {
        var currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        Items = currentUrl.Split(Path.PathSeparator).ToList().Select(rs => new MenuItem { Text = rs });
        StateHasChanged();
    }
    private void NavigateToUrl(string url)
    {
        NavigationManager.NavigateTo(url);
    }
    public void Dispose()
    {
        NavigationManager.LocationChanged -= LocationHasChanged;        
    }
}